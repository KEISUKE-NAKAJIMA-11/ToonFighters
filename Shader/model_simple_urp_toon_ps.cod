//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 projection;     // Offset:   64 Size:    64 [unused]
//   float4 light_direction;            // Offset:  128 Size:    16
//   row_major float4x4 da;             // Offset:  144 Size:    64 [unused]
//   row_major float4x4 d2;             // Offset:  208 Size:    64 [unused]
//   float4 eye_position;               // Offset:  272 Size:    16 [unused]
//   float4 light_color;                // Offset:  288 Size:    16
//   float4 outoline;                   // Offset:  304 Size:    16 [unused]
//
// }
//
// cbuffer CbUrptoon
// {
//
//   float4 _BaseMap_ST;                // Offset:    0 Size:    16 [unused]
//   float4 _BaseColor;                 // Offset:   16 Size:    16 [unused]
//   float _IsFace;                     // Offset:   32 Size:     4
//   float _Cutoff;                     // Offset:   36 Size:     4 [unused]
//   float _UseEmission;                // Offset:   40 Size:     4
//   float _EmissionMulByBaseColor;     // Offset:   44 Size:     4
//   float3 _EmissionColor;             // Offset:   48 Size:    12
//   float dummy1;                      // Offset:   60 Size:     4 [unused]
//   float3 _EmissionMapChannelMask;    // Offset:   64 Size:    12
//   float dummy2;                      // Offset:   76 Size:     4 [unused]
//   float _UseOcclusion;               // Offset:   80 Size:     4
//   float _OcclusionStrength;          // Offset:   84 Size:     4
//   float _OcclusionRemapStart;        // Offset:   88 Size:     4
//   float _OcclusionRemapEnd;          // Offset:   92 Size:     4
//   float4 _OcclusionMapChannelMask;   // Offset:   96 Size:    16
//   float _CelShadeMidPoint;           // Offset:  112 Size:     4
//   float _CelShadeSoftness;           // Offset:  116 Size:     4
//   float _ReceiveShadowMappingAmount; // Offset:  120 Size:     4 [unused]
//   float _ReceiveShadowMappingPosOffset;// Offset:  124 Size:     4 [unused]
//   float3 _IndirectLightMinColor;     // Offset:  128 Size:    12
//   float dummy3;                      // Offset:  140 Size:     4 [unused]
//   float3 _ShadowMapColor;            // Offset:  144 Size:    12
//   float dummy4;                      // Offset:  156 Size:     4 [unused]
//   float _OutlineWidth;               // Offset:  160 Size:     4 [unused]
//   float _OutlineZOffset;             // Offset:  164 Size:     4 [unused]
//   float _OutlineZOffsetMaskRemapStart;// Offset:  168 Size:     4 [unused]
//   float _OutlineZOffsetMaskRemapEnd; // Offset:  172 Size:     4 [unused]
//   float3 _OutlineColor;              // Offset:  176 Size:    12 [unused]
//   float dummy5;                      // Offset:  188 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// _BaseMap                          sampler      NA          NA             s0      1 
// _EmissionMap                      sampler      NA          NA             s1      1 
// _OcclusionMap                     sampler      NA          NA             s2      1 
// albedo_texture                    texture  float4          2d             t0      1 
// emmision_texture                  texture  float4          2d             t1      1 
// oclusion_texture                  texture  float4          2d             t2      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbUrptoon                         cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float       
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_constantbuffer CB3[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r0.xyzw, r0.xyzw, v2.xyzw
ne r1.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb3[2].zxzz
if_nz r1.x
  sample_indexable(texture2d)(float,float,float,float) r1.xzw, v1.xyxx, t1.xwyz, s1
  mul r1.xzw, r1.xxzw, cb3[4].xxyz
  mul r1.xzw, r1.xxzw, cb3[3].xxyz
else 
  mov r1.xzw, l(0,0,0,0)
endif 
ne r2.x, l(0.000000, 0.000000, 0.000000, 0.000000), cb3[5].x
if_nz r2.x
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t2.xyzw, s2
  dp4 r2.x, r2.xyzw, cb3[6].xyzw
  add r2.x, r2.x, l(-0.100000)
  mad r2.x, cb3[5].y, r2.x, l(0.100000)
  add r2.x, r2.x, -cb3[5].z
  add r2.y, -cb3[5].z, cb3[5].w
  div_sat r2.x, r2.x, r2.y
else 
  mov r2.x, l(1.000000)
endif 
dp4 r2.y, v4.xyzw, v4.xyzw
rsq r2.y, r2.y
mul r2.yzw, r2.yyyy, v4.xxyz
max r3.xyz, cb3[8].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r3.w, r2.x, l(-1.000000)
mad r3.w, r3.w, l(0.500000), l(1.000000)
mul r3.xyz, r3.wwww, r3.xyzx
dp3 r2.y, r2.yzwy, cb0[8].xyzx
add r2.z, -cb3[7].y, cb3[7].x
add r2.w, cb3[7].y, cb3[7].x
add r2.yw, -r2.zzzz, r2.yyyw
div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul_sat r2.y, r2.z, r2.y
mad r2.z, r2.y, l(-2.000000), l(3.000000)
mul r2.y, r2.y, r2.y
mul r2.y, r2.y, r2.z
mul r2.x, r2.x, r2.y
mul r2.y, r2.x, l(0.500000)
movc r1.y, r1.y, r2.y, r2.x
add r2.xyz, -cb3[9].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xyz, r1.yyyy, r2.xyzx, cb3[9].xyzx
mov_sat r4.xyz, cb0[18].xyzx
mul r2.xyz, r2.xyzx, r4.xyzx
mad r4.xyz, r1.xzwx, r0.xyzx, -r1.xzwx
mad r1.xyz, cb3[2].wwww, r4.xyzx, r1.xzwx
max r2.xyz, r2.xyzx, r3.xyzx
mad o0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
mov o0.w, r0.w
ret 
// Approximately 51 instruction slots used
