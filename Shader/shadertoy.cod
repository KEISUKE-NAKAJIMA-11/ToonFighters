//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer SHADERTOY_CONSTANT_BUFFER
// {
//
//   float4 iResolution;                // Offset:    0 Size:    16
//   float4 iMouse;                     // Offset:   16 Size:    16 [unused]
//   float4 iChannelResolution[4];      // Offset:   32 Size:    64 [unused]
//   float iTime;                       // Offset:   96 Size:     4
//   float iFrame;                      // Offset:  100 Size:     4 [unused]
//   float iPad0;                       // Offset:  104 Size:     4 [unused]
//   float iPad1;                       // Offset:  108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SHADERTOY_CONSTANT_BUFFER         cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB6[7], immediateIndexed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 3
div r0.xy, v0.xyxx, cb6[0].xyxx
mov r0.z, -r0.y
add r0.xy, r0.xzxx, l(-0.500000, 0.500000, 0.000000, 0.000000)
mul r0.z, r0.x, l(60.000000)
round_ni r0.z, r0.z
sincos null, r0.z, r0.z
mad r0.z, r0.y, l(32.000000), r0.z
mad r0.z, cb6[6].x, l(6.283185), r0.z
sincos null, r1.w, r0.z
mul r2.xyz, r0.xxxx, l(14.000000, 30.000000, 28.000000, 0.000000)
sincos null, r1.xz, r2.xxzx
round_ni r0.z, r2.y
sincos null, r0.z, r0.z
mad r0.z, r0.y, l(16.000000), r0.z
mad r0.z, cb6[6].x, l(6.283185), r0.z
sincos null, r1.y, r0.z
mul r0.zw, r1.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
mad r2.xy, r0.xyxx, l(24.200001, 24.200001, 0.000000, 0.000000), r0.zwzz
sincos null, r0.z, r0.z
mad r0.zw, r0.zzzz, l(0.000000, 0.000000, 0.500000, 0.500000), r2.xxxy
sincos null, r0.zw, r0.zzzw
add r2.xy, r0.zwzz, l(0.530000, 0.600000, 0.000000, 0.000000)
add r0.zw, r0.zzzw, -r1.zzzw
add r1.zw, -r1.zzzw, r2.xxxy
dp2 r1.z, r1.zwzz, r1.zwzz
add r2.xyzw, r0.zwzw, l(-0.383791, 0.425244, 0.187516, -0.672721)
add r0.zw, r0.zzzw, l(0.000000, 0.000000, -0.329700, -0.395766)
dp2 r0.z, r0.zwzz, r0.zwzz
dp2 r0.w, r2.xyxx, r2.xyxx
dp2 r1.w, r2.zwzz, r2.zwzz
sqrt r1.zw, r1.zzzw
sqrt r0.zw, r0.zzzw
min r0.w, r0.w, r1.z
min r0.w, r1.w, r0.w
min r0.z, r0.z, r0.w
mad r0.z, -r0.z, l(0.300000), l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, l(13.000000)
exp r0.z, r0.z
add r0.z, r0.z, r0.z
min r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, l(5.000000)
mul r1.zw, r1.xxxy, l(0.000000, 0.000000, 10.000000, 10.000000)
mad r0.xy, r0.xyxx, l(12.100000, 12.100000, 0.000000, 0.000000), r1.zwzz
sincos null, r0.w, r1.z
mad r0.xy, r0.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r0.xyxx
sincos null, r0.xy, r0.xyxx
add r1.zw, r0.xxxy, l(0.000000, 0.000000, 0.530000, 0.600000)
add r0.xy, r0.xyxx, -r1.xyxx
add r1.xy, -r1.xyxx, r1.zwzz
dp2 r0.w, r1.xyxx, r1.xyxx
add r1.xyzw, r0.xyxy, l(-0.383791, 0.425244, 0.187516, -0.672721)
add r0.xy, r0.xyxx, l(-0.329700, -0.395766, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
dp2 r0.y, r1.xyxx, r1.xyxx
dp2 r1.x, r1.zwzz, r1.zwzz
sqrt r1.x, r1.x
sqrt r0.xyw, r0.xyxw
min r0.y, r0.y, r0.w
min r0.y, r1.x, r0.y
min r0.x, r0.x, r0.y
mad r0.x, -r0.x, l(0.300000), l(1.000000)
log r0.x, r0.x
mul r0.x, r0.x, l(13.000000)
exp r0.x, r0.x
add r0.x, r0.x, r0.x
min r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, l(5.000000)
round_ni r0.xz, r0.xxzx
mad r0.y, r0.x, l(0.120000), l(0.020000)
mad o0.y, r0.z, l(0.040000), r0.y
mul r0.yz, r0.zzzz, l(0.000000, 0.200000, 0.020000, 0.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.w, r0.y
mad o0.x, r0.x, l(0.020000), r0.z
mul r0.xy, r0.xyxx, l(0.200000, 0.010000, 0.000000, 0.000000)
mul r0.z, r0.x, r0.x
mul r0.z, r0.z, r0.z
mul r0.x, r0.z, r0.x
mad o0.z, r0.x, l(0.500000), r0.y
mov o0.w, l(1.000000)
ret 
// Approximately 83 instruction slots used
