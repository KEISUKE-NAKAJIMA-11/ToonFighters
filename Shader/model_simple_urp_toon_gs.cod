//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view_projection;// Offset:    0 Size:    64
//   row_major float4x4 projection;     // Offset:   64 Size:    64 [unused]
//   float4 light_direction;            // Offset:  128 Size:    16 [unused]
//   row_major float4x4 da;             // Offset:  144 Size:    64 [unused]
//   row_major float4x4 d2;             // Offset:  208 Size:    64 [unused]
//   float4 eye_position;               // Offset:  272 Size:    16 [unused]
//   float4 light_color;                // Offset:  288 Size:    16 [unused]
//   float4 outoline;                   // Offset:  304 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float   xyzw
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float   xyzw
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
//
gs_4_0
dcl_constantbuffer CB0[20], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xy
dcl_input v[3][1].zw
dcl_input v[3][2].xyzw
dcl_input v[3][3].xyzw
dcl_input v[3][4].xyzw
dcl_temps 2
dcl_inputprimitive triangle 
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_maxout 6
mov r0.x, l(0)
loop 
  ige r0.y, r0.x, l(3)
  breakc_nz r0.y
  mul r1.xyzw, cb0[1].xyzw, v[r0.x + 0][0].yyyy
  mad r1.xyzw, v[r0.x + 0][0].xxxx, cb0[0].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.x + 0][0].zzzz, cb0[2].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.x + 0][0].wwww, cb0[3].xyzw, r1.xyzw
  mov o0.xyzw, r1.xyzw
  mov o1.xyzw, v[r0.x + 0][1].xyzw
  mov o2.xyzw, v[r0.x + 0][2].xyzw
  mov o3.xyzw, v[r0.x + 0][3].xyzw
  mov o4.xyzw, v[r0.x + 0][4].xyzw
  emit 
  iadd r0.x, r0.x, l(1)
endloop 
cut 
mov r0.x, l(2)
loop 
  ilt r0.y, r0.x, l(0)
  breakc_nz r0.y
  dp3 r0.y, v[r0.x + 0][4].xyzx, v[r0.x + 0][4].xyzx
  rsq r0.y, r0.y
  mul r0.yzw, r0.yyyy, v[r0.x + 0][4].xxyz
  mad r0.yzw, r0.yyzw, cb0[19].xxxx, v[r0.x + 0][3].xxyz
  mul r1.xyzw, r0.zzzz, cb0[1].xyzw
  mad r1.xyzw, r0.yyyy, cb0[0].xyzw, r1.xyzw
  mad r1.xyzw, r0.wwww, cb0[2].xyzw, r1.xyzw
  add r1.xyzw, r1.xyzw, cb0[3].xyzw
  mov o0.xyzw, r1.xyzw
  mov o1.xyzw, v[r0.x + 0][1].xyzw
  mov o2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  mov o3.xyz, r0.yzwy
  mov o3.w, l(1.000000)
  mov o4.xyz, v[r0.x + 0][4].xyzx
  mov o4.w, l(1.000000)
  emit 
  iadd r0.x, r0.x, l(-1)
endloop 
ret 
// Approximately 40 instruction slots used
