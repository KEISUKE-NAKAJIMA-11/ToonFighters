//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbMesh
// {
//
//   row_major float4x4 bone_transforms[68];// Offset:    0 Size:  4352
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 material_color;             // Offset:    0 Size:    16
//   row_major float4x4 world_view_projection;// Offset:   16 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   80 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbMesh                            cbuffer      NA          NA            cb1      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// WEIGHTS                  0   xyzw        3     NONE   float   xyzw
// BONES                    0   xyzw        4     NONE    uint   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float   xyzw
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
// wmatrix                  0   xyzw        5     NONE   float   xyzw
// wmatrix                  1   xyzw        6     NONE   float   xyzw
// wmatrix                  2   xyzw        7     NONE   float   xyzw
// wmatrix                  3   xyzw        8     NONE   float   xyzw
// wmatrix                  4   xyzw        9     NONE   float   xyzw
// wmatrix                  5   xyzw       10     NONE   float   xyzw
// wmatrix                  6   xyzw       11     NONE   float   xyzw
// wmatrix                  7   xyzw       12     NONE   float   xyzw
// wmatrix                  8   xyzw       13     NONE   float   xyzw
// wmatrix                  9   xyzw       14     NONE   float   xyzw
// wmatrix                 10   xyzw       15     NONE   float   xyzw
// wmatrix                 11   xyzw       16     NONE   float   xyzw
// wmatrix                 12   xyzw       17     NONE   float   xyzw
// wmatrix                 13   xyzw       18     NONE   float   xyzw
// wmatrix                 14   xyzw       19     NONE   float   xyzw
// wmatrix                 15   xyzw       20     NONE   float   xyzw
// TEXCOORD                 2   xyz        21     NONE   float   xyz 
// TEXCOORD                 3   xyz        22     NONE   float   xyz 
// TEXCOORD                 4   xyz        23     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[272], dynamicIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyzw
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.xyzw
dcl_output o13.xyzw
dcl_output o14.xyzw
dcl_output o15.xyzw
dcl_output o16.xyzw
dcl_output o17.xyzw
dcl_output o18.xyzw
dcl_output o19.xyzw
dcl_output o20.xyzw
dcl_output o21.xyz
dcl_output o22.xyz
dcl_output o23.xyz
dcl_temps 3
mov o0.w, l(1.000000)
ishl r0.xyzw, v4.xyzw, l(2, 2, 2, 2)
mul r1.xyz, v0.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v0.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v0.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mad r1.xyz, v0.wwww, cb1[r0.y + 3].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v0.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.x + 3].xyzx, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.z + 3].xyzx, r2.xyzx
mad r1.xyz, v3.zzzz, r2.xyzx, r1.xyzx
mul r2.xyz, v0.yyyy, cb1[r0.w + 1].xyzx
mad r2.xyz, v0.xxxx, cb1[r0.w + 0].xyzx, r2.xyzx
mad r2.xyz, v0.zzzz, cb1[r0.w + 2].xyzx, r2.xyzx
mad r2.xyz, v0.wwww, cb1[r0.w + 3].xyzx, r2.xyzx
mad r1.xyz, v3.wwww, r2.xyzx, r1.xyzx
mov o0.xyz, r1.xyzx
mov o3.xyz, r1.xyzx
mov o1.xy, v2.xyxx
mov o1.zw, l(0,0,0,0)
mov o2.xyzw, cb2[0].xyzw
mov o3.w, l(1.000000)
mul r1.xyz, v1.yyyy, cb1[r0.y + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.y + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.y + 2].xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, v3.yyyy
mul r2.xyz, v1.yyyy, cb1[r0.x + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.x + 0].xyzx, r2.xyzx
mad r2.xyz, v1.zzzz, cb1[r0.x + 2].xyzx, r2.xyzx
mad r1.xyz, v3.xxxx, r2.xyzx, r1.xyzx
mul r2.xyz, v1.yyyy, cb1[r0.z + 1].xyzx
mad r2.xyz, v1.xxxx, cb1[r0.z + 0].xyzx, r2.xyzx
mad r0.xyz, v1.zzzz, cb1[r0.z + 2].xyzx, r2.xyzx
mad r0.xyz, v3.zzzz, r0.xyzx, r1.xyzx
mul r1.xyz, v1.yyyy, cb1[r0.w + 1].xyzx
mad r1.xyz, v1.xxxx, cb1[r0.w + 0].xyzx, r1.xyzx
mad r1.xyz, v1.zzzz, cb1[r0.w + 2].xyzx, r1.xyzx
mad r0.xyz, v3.wwww, r1.xyzx, r0.xyzx
mov o4.xyz, r0.xyzx
mov o4.w, l(0)
mov o5.xyzw, l(0,0,0,0)
mov o6.xyzw, l(0,0,0,0)
mov o7.xyzw, l(0,0,0,0)
mov o8.xyzw, l(0,0,0,0)
mov o9.xyzw, l(0,0,0,0)
mov o10.xyzw, l(0,0,0,0)
mov o11.xyzw, l(0,0,0,0)
mov o12.xyzw, l(0,0,0,0)
mov o13.xyzw, l(0,0,0,0)
mov o14.xyzw, l(0,0,0,0)
mov o15.xyzw, l(0,0,0,0)
mov o16.xyzw, l(0,0,0,0)
mov o17.xyzw, l(0,0,0,0)
mov o18.xyzw, l(0,0,0,0)
mov o19.xyzw, l(0,0,0,0)
mov o20.xyzw, l(0,0,0,0)
mul r1.xyz, r0.zxyz, l(1.000000, 0.001000, 0.000000, 0.000000)
mad r1.xyz, r0.yzxy, l(0.001000, 0.000000, 1.000000, 0.000000), -r1.xyzx
mov o23.xyz, r0.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul o21.xyz, r0.xxxx, r1.xyzx
mov o22.xyz, l(0,1.000000,0.001000,0)
ret 
// Approximately 70 instruction slots used
