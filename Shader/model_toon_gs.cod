//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 view_projection;// Offset:   64 Size:    64
//   row_major float4x4 prevview_projection;// Offset:  128 Size:    64 [unused]
//   float4 light_direction;            // Offset:  192 Size:    16 [unused]
//   row_major float4x4 da;             // Offset:  208 Size:    64 [unused]
//   row_major float4x4 d2;             // Offset:  272 Size:    64 [unused]
//   float4 eye_position;               // Offset:  336 Size:    16 [unused]
//   float4 light_color;                // Offset:  352 Size:    16 [unused]
//   float4 outoline;                   // Offset:  368 Size:    16
//   float4 camera_front;               // Offset:  384 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// CbScene                           cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float   xyzw
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
// wmatrix                  0   xyzw        5     NONE   float       
// wmatrix                  1   xyzw        6     NONE   float       
// wmatrix                  2   xyzw        7     NONE   float       
// wmatrix                  3   xyzw        8     NONE   float       
// wmatrix                  4   xyzw        9     NONE   float       
// wmatrix                  5   xyzw       10     NONE   float       
// wmatrix                  6   xyzw       11     NONE   float       
// wmatrix                  7   xyzw       12     NONE   float       
// wmatrix                  8   xyzw       13     NONE   float       
// wmatrix                  9   xyzw       14     NONE   float       
// wmatrix                 10   xyzw       15     NONE   float       
// wmatrix                 11   xyzw       16     NONE   float       
// wmatrix                 12   xyzw       17     NONE   float       
// wmatrix                 13   xyzw       18     NONE   float       
// wmatrix                 14   xyzw       19     NONE   float       
// wmatrix                 15   xyzw       20     NONE   float       
// TEXCOORD                 2   xyz        21     NONE   float   xyz 
// TEXCOORD                 3   xyz        22     NONE   float   xyz 
// TEXCOORD                 4   xyz        23     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// COLOR                    0   xyzw        2     NONE   float   xyzw
// WORLD_POSITION           0   xyzw        3     NONE   float   xyzw
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// TEXCOORD                 4   xyz         7     NONE   float   xyz 
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xy
dcl_input v[3][1].zw
dcl_input v[3][2].xyzw
dcl_input v[3][3].xyzw
dcl_input v[3][4].xyzw
dcl_input v[3][5].xyzw
dcl_input v[3][6].xyzw
dcl_input v[3][7].xyzw
dcl_input v[3][8].xyzw
dcl_input v[3][9].xyzw
dcl_input v[3][10].xyzw
dcl_input v[3][11].xyzw
dcl_input v[3][12].xyzw
dcl_input v[3][13].xyzw
dcl_input v[3][14].xyzw
dcl_input v[3][15].xyzw
dcl_input v[3][16].xyzw
dcl_input v[3][17].xyzw
dcl_input v[3][18].xyzw
dcl_input v[3][19].xyzw
dcl_input v[3][20].xyzw
dcl_input v[3][21].xyz
dcl_input v[3][22].xyz
dcl_input v[3][23].xyz
dcl_temps 2
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_maxout 6
mov r0.x, l(0)
loop 
  ige r0.y, r0.x, l(3)
  breakc_nz r0.y
  mul r1.xyzw, cb0[5].xyzw, v[r0.x + 0][0].yyyy
  mad r1.xyzw, v[r0.x + 0][0].xxxx, cb0[4].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.x + 0][0].zzzz, cb0[6].xyzw, r1.xyzw
  mad r1.xyzw, v[r0.x + 0][0].wwww, cb0[7].xyzw, r1.xyzw
  mov o0.xyzw, r1.xyzw
  mov o1.xyzw, v[r0.x + 0][1].xyzw
  mov o2.xyzw, v[r0.x + 0][2].xyzw
  mov o3.xyzw, v[r0.x + 0][3].xyzw
  mov o4.xyzw, v[r0.x + 0][4].xyzw
  mov o5.xyz, v[r0.x + 0][21].xyzx
  mov o6.xyz, v[r0.x + 0][22].xyzx
  mov o7.xyz, v[r0.x + 0][23].xyzx
  emit_stream m0
  iadd r0.x, r0.x, l(1)
endloop 
cut_stream m0
mov r0.x, l(2)
loop 
  ilt r0.y, r0.x, l(0)
  breakc_nz r0.y
  dp3 r0.y, v[r0.x + 0][4].xyzx, v[r0.x + 0][4].xyzx
  rsq r0.y, r0.y
  mul r0.yzw, r0.yyyy, v[r0.x + 0][4].xxyz
  mad r0.yzw, r0.yyzw, cb0[23].xxxx, v[r0.x + 0][3].xxyz
  mul r1.xyzw, r0.zzzz, cb0[5].xyzw
  mad r1.xyzw, r0.yyyy, cb0[4].xyzw, r1.xyzw
  mad r1.xyzw, r0.wwww, cb0[6].xyzw, r1.xyzw
  add r1.xyzw, r1.xyzw, cb0[7].xyzw
  mov o0.xyzw, r1.xyzw
  mov o1.xyzw, v[r0.x + 0][1].xyzw
  mov o2.xyzw, l(0,0,0,1.000000)
  mov o3.xyz, r0.yzwy
  mov o3.w, l(1.000000)
  mov o4.xyz, v[r0.x + 0][4].xyzx
  mov o4.w, l(1.000000)
  mov o5.xyz, v[r0.x + 0][21].xyzx
  mov o6.xyz, v[r0.x + 0][22].xyzx
  mov o7.xyz, v[r0.x + 0][23].xyzx
  emit_stream m0
  iadd r0.x, r0.x, l(-1)
endloop 
ret 
// Approximately 46 instruction slots used
