//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CbScene
// {
//
//   row_major float4x4 view;           // Offset:    0 Size:    64 [unused]
//   row_major float4x4 view_projection;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 prevview_projection;// Offset:  128 Size:    64 [unused]
//   float4 light_direction;            // Offset:  192 Size:    16
//   row_major float4x4 da;             // Offset:  208 Size:    64 [unused]
//   row_major float4x4 d2;             // Offset:  272 Size:    64 [unused]
//   float4 eye_position;               // Offset:  336 Size:    16 [unused]
//   float4 light_color;                // Offset:  352 Size:    16 [unused]
//   float4 outoline;                   // Offset:  368 Size:    16 [unused]
//   float4 camera_front;               // Offset:  384 Size:    16
//
// }
//
// cbuffer CbSubset
// {
//
//   float4 material_color;             // Offset:    0 Size:    16 [unused]
//   row_major float4x4 world_view_projection;// Offset:   16 Size:    64 [unused]
//   row_major float4x4 world;          // Offset:   80 Size:    64 [unused]
//   float4 xModelBaseColor;            // Offset:  144 Size:    16
//   float4 xModelEmissionColor;        // Offset:  160 Size:    16
//   float4 xModelEmissionEdgeColor;    // Offset:  176 Size:    16
//   float3 xModelLocalLightVec;        // Offset:  192 Size:    12 [unused]
//   float xModelEdgeThreshold;         // Offset:  204 Size:     4
//   float2 dammy;                      // Offset:  208 Size:     8 [unused]
//   float xModelShadowBias;            // Offset:  216 Size:     4 [unused]
//   float xModelToonThreshold;         // Offset:  220 Size:     4
//   int xModelReceivedShadow;          // Offset:  224 Size:     4 [unused]
//   float xModelZoffset;               // Offset:  228 Size:     4 [unused]
//   float xModelpadding1;              // Offset:  232 Size:     4 [unused]
//   float xModelpadding2;              // Offset:  236 Size:     4 [unused]
//
// }
//
// cbuffer CBEnvironment
// {
//
//   float4 xEnvironmentAmbientBrightColor;// Offset:    0 Size:    16
//   float4 xEnvironmentAmbientDarkColor;// Offset:   16 Size:    16
//   row_major float4x4 xEnvironmentGlobalLightVP;// Offset:   32 Size:    64 [unused]
//   float3 xEnvironmentGlobalLightVec; // Offset:   96 Size:    12 [unused]
//   float padding;                     // Offset:  108 Size:     4 [unused]
//
// }
//
// cbuffer CBPerFrame2
// {
//
//   struct POINTLIGHT
//   {
//       
//       float index;                   // Offset:    0
//       float range;                   // Offset:    4
//       float type;                    // Offset:    8
//       float dummy;                   // Offset:   12
//       float4 pos;                    // Offset:   16
//       float4 color;                  // Offset:   32
//
//   } PointLight[32];                  // Offset:    0 Size:  1536
//   
//   struct SPOTLIGHT
//   {
//       
//       float index;                   // Offset: 1536
//       float range;                   // Offset: 1540
//       float type;                    // Offset: 1544
//       float inner_corn;              // Offset: 1548
//       float outer_corn;              // Offset: 1552
//       float dummy0;                  // Offset: 1556
//       float dummy1;                  // Offset: 1560
//       float dummy2;                  // Offset: 1564
//       float4 pos;                    // Offset: 1568
//       float4 color;                  // Offset: 1584
//       float4 dir;                    // Offset: 1600
//
//   } SpotLight[32];                   // Offset: 1536 Size:  2560 [unused]
//   float3 A;                          // Offset: 4096 Size:    12 [unused]
//   float dummy;                       // Offset: 4108 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse_map_sampler_state         sampler      NA          NA             s0      1 
// diffuse_map                       texture  float4          2d             t0      1 
// CbScene                           cbuffer      NA          NA            cb0      1 
// CbSubset                          cbuffer      NA          NA            cb2      1 
// CBPerFrame2                       cbuffer      NA          NA            cb4      1 
// CBEnvironment                     cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
// WORLD_POSITION           0   xyzw        3     NONE   float   xyz 
// WORLD_NORMAL             0   xyzw        4     NONE   float   xyzw
// wmatrix                  0   xyzw        5     NONE   float       
// wmatrix                  1   xyzw        6     NONE   float       
// wmatrix                  2   xyzw        7     NONE   float       
// wmatrix                  3   xyzw        8     NONE   float       
// wmatrix                  4   xyzw        9     NONE   float       
// wmatrix                  5   xyzw       10     NONE   float       
// wmatrix                  6   xyzw       11     NONE   float       
// wmatrix                  7   xyzw       12     NONE   float       
// wmatrix                  8   xyzw       13     NONE   float       
// wmatrix                  9   xyzw       14     NONE   float       
// wmatrix                 10   xyzw       15     NONE   float       
// wmatrix                 11   xyzw       16     NONE   float       
// wmatrix                 12   xyzw       17     NONE   float       
// wmatrix                 13   xyzw       18     NONE   float       
// wmatrix                 14   xyzw       19     NONE   float       
// wmatrix                 15   xyzw       20     NONE   float       
// TEXCOORD                 2   xyz        21     NONE   float       
// TEXCOORD                 3   xyz        22     NONE   float       
// TEXCOORD                 4   xyz        23     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], immediateIndexed
dcl_constantbuffer CB2[14], immediateIndexed
dcl_constantbuffer CB5[2], immediateIndexed
dcl_constantbuffer CB4[96], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyzw
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
log r0.xyzw, |r0.xyzw|
mul r0.xyzw, r0.xyzw, l(2.200000, 2.200000, 2.200000, 2.200000)
exp r0.xyzw, r0.xyzw
mul r0.xyzw, r0.xyzw, cb5[0].xyzw
dp4 r1.x, v4.xyzw, v4.xyzw
rsq r1.x, r1.x
mul r1.xyz, r1.xxxx, v4.xyzx
dp3 r1.w, cb0[24].xyzx, cb0[24].xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, cb0[24].xyzx
dp3 r1.w, cb0[12].xyzx, cb0[12].xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, cb0[12].xyzx
dp3 r1.w, r3.xyzx, r1.xyzx
ge r1.w, r1.w, cb2[13].w
and r1.w, r1.w, l(0x3f800000)
dp3 r2.x, r1.xyzx, r2.xyzx
add r2.x, -|r2.x|, l(1.000000)
ge r2.y, r2.x, cb2[12].w
and r2.y, r2.y, l(0x3f800000)
add r3.xyzw, -cb2[10].xyzw, cb2[11].xyzw
mad r3.xyzw, r2.yyyy, r3.xyzw, cb2[10].xyzw
add r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
ge r2.x, r2.x, l(0.750000)
and r2.x, r2.x, l(0x3d4ccccd)
mov r2.yzw, l(0,0,0,0)
mov r4.x, l(0)
loop 
  ige r4.y, r4.x, l(32)
  breakc_nz r4.y
  imul null, r4.y, r4.x, l(3)
  eq r4.z, l(0.000000), cb4[r4.y + 0].z
  if_nz r4.z
    iadd r4.z, r4.x, l(1)
    mov r4.x, r4.z
    continue 
  endif 
  add r5.xyz, v3.xyzx, -cb4[r4.y + 1].xyzx
  dp3 r4.z, r5.xyzx, r5.xyzx
  sqrt r4.w, r4.z
  lt r5.w, cb4[r4.y + 0].y, r4.w
  if_nz r5.w
    iadd r5.w, r4.x, l(1)
    mov r4.x, r5.w
    continue 
  endif 
  div r4.w, r4.w, cb4[r4.y + 0].y
  add_sat r4.w, -r4.w, l(10.000000)
  rsq r4.z, r4.z
  mul r5.xyz, r4.zzzz, r5.xyzx
  dp3 r4.z, r1.xyzx, -r5.xyzx
  lt r4.z, r4.z, l(0.300000)
  movc r4.z, r4.z, l(0.200000), l(0.600000)
  mul r5.xyz, r1.wwww, cb4[r4.y + 2].xyzx
  mul r5.xyz, r4.zzzz, r5.xyzx
  mad r2.yzw, r5.xxyz, r4.wwww, r2.yyzw
  iadd r4.x, r4.x, l(1)
endloop 
mad r4.xyzw, r0.xyzw, cb5[1].xyzw, -r0.xyzw
mad r0.xyzw, r1.wwww, r4.xyzw, r0.xyzw
add r1.xyz, -r0.xyzx, cb5[0].xyzx
mad r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r3.xyzx, r3.wwww, r2.yzwy
add r0.xyz, r0.xyzx, r1.xyzx
mul o0.xyzw, r0.xyzw, cb2[9].xyzw
ret 
// Approximately 67 instruction slots used
